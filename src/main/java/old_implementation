 do {

            //current event string
            if ((TimeHandler.addTimeSeconds(startingTime, ConfigReader.getStreamDuration())).before(dataStream.getCurrentEventTime()) )
                break;

            List<String> line = new ArrayList<>();

            int eventID = dataStream.getEventID();
            listOfEventLists.get(sensorID).add(new Event(currentEvent));

            eventTime = dataStream.getCurrentEventTime();
            boolean oooState = delayers.get(sensorID).delay(listOfEventLists.get(sensorID).get(currentEvent))
            //processingTime = delayers.get(sensorID).delay(listOfEventLists.get(sensorID).get(currentEvent));


            if (oooState) {

            }


            //spalte 1
            Converter.listGenerator(line, String.valueOf(eventID));

            //spalte 2
            Converter.listGenerator(line, String.valueOf(eventTime.getTime()));

            //spalte 3
            Converter.listGenerator(line, String.valueOf(processingTime.getTime()));

            //spalte 4
            Converter.listGenerator(line, String.valueOf(insulinSensors.get(sensorID).serialNumber));

            //spalte 5
            Converter.listGenerator(line, String.valueOf(insulinSensors.get(sensorID).glucoseAmount));

            //spalte 5
            Converter.listGenerator(line, String.valueOf(insulinSensors.get(sensorID).highGluckoseWarning));

            insulinSensors.get(sensorID).Updater();


            sensorID++;


            if (sensorID >= amountOfSources) {
                dataStream.timeUpdater();
                sensorID = 0;
            }

            String string = Converter.stringGenerator(line);
            Connector.exporter(fileWriter, string);

        }
        while (true);